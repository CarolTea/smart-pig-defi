version: '3.8'

services:
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend-dev
    networks:
      - smart-pig-dev
    stdin_open: true
    tty: true

  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres-dev:5432/smart_pig_dev
      - JWT_SECRET=dev-jwt-secret-key
      - STELLAR_NETWORK=testnet
    networks:
      - smart-pig-dev
    depends_on:
      postgres-dev:
        condition: service_healthy
    command: npm run start:debug

  postgres-dev:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=smart_pig_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - smart-pig-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d smart_pig_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-dev:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - smart-pig-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  docs-dev:
    build:
      context: ./docs
      dockerfile: Dockerfile.dev
    ports:
      - "3002:3000"
    volumes:
      - ./docs:/app
      - docs_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - smart-pig-dev
    stdin_open: true
    tty: true

  # Development tools
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    networks:
      - smart-pig-dev
    depends_on:
      - postgres-dev

networks:
  smart-pig-dev:
    driver: bridge

volumes:
  frontend_node_modules:
  backend_node_modules:
  docs_node_modules:
  postgres_dev_data:
  redis_dev_data: